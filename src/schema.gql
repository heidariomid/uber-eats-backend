# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: Float!
  updatedAt: DateTime
  createdAt: DateTime
  name: String!
  iconImg: String
  slug: String!
  restaurants: [Restaurant!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: Float!
  updatedAt: DateTime
  createdAt: DateTime
  email: String!
  password: String!
  role: UserRole!
  verified: Boolean!
  restaurants: [Restaurant!]!
}

enum UserRole {
  Owner
  Client
  Delivery
}

type Restaurant {
  id: Float!
  updatedAt: DateTime
  createdAt: DateTime
  name: String!
  coverImg: String!
  address: String!
  category: Category
  owner: User!
}

type CreateRestaurantOutput {
  message: String
  ok: Boolean!
}

type DeleteRestaurantOutput {
  message: String
  ok: Boolean!
}

type EditRestaurantOutput {
  message: String
  ok: Boolean!
}

type UpdateUserOutput {
  message: String
  ok: Boolean!
}

type UserProfileOutput {
  message: String
  ok: Boolean!
  user: User
}

type ValidateEmailOutput {
  message: String
  ok: Boolean!
}

type createAccountOutput {
  message: String
  ok: Boolean!
}

type loginOutput {
  message: String
  ok: Boolean!
  token: String
}

type Query {
  users: [User!]!
  loggedInUser: User!
  userProfile(userId: Float!): UserProfileOutput!
}

type Mutation {
  createRestaurant(data: CreateRestaurantInput!): CreateRestaurantOutput!
  editRestaurant(data: EditRestaurantInput!): EditRestaurantOutput!
  deleteRestaurant(data: DeleteRestaurantInput!): DeleteRestaurantOutput!
  addUser(data: addUserArgs!): User!
  updateUser(data: UpdateUserInput!): UpdateUserOutput!
  validateEmail(data: ValidateEmailInput!): ValidateEmailOutput!
  createAccount(data: createAccountInput!): createAccountOutput!
  login(data: loginInput!): loginOutput!
}

input CreateRestaurantInput {
  name: String!
  coverImg: String!
  address: String!
  categoryName: String!
}

input EditRestaurantInput {
  name: String
  coverImg: String
  address: String
  categoryName: String
  restaurantId: Float!
}

input DeleteRestaurantInput {
  name: String
  coverImg: String
  address: String
  categoryName: String
  restaurantId: Float!
}

input addUserArgs {
  updatedAt: DateTime
  createdAt: DateTime
  email: String!
  password: String!
  role: UserRole!
  verified: Boolean!
  restaurants: [RestaurantInput!]!
}

input RestaurantInput {
  name: String!
  coverImg: String!
  address: String!
  category: CategoryInput
  owner: UserInput!
}

input CategoryInput {
  name: String!
  iconImg: String
  slug: String!
  restaurants: [RestaurantInput!]!
}

input UserInput {
  email: String!
  password: String!
  role: UserRole!
  verified: Boolean!
  restaurants: [RestaurantInput!]!
}

input UpdateUserInput {
  email: String
  password: String
  role: UserRole
}

input ValidateEmailInput {
  code: String!
}

input createAccountInput {
  email: String!
  password: String!
  role: UserRole!
}

input loginInput {
  email: String!
  password: String!
}